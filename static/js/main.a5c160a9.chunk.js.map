{"version":3,"sources":["components/ChessBoard/ChessBoard.js","components/ButtonsWrapper/ButtonsWrapper.js","assets/svg/knight.svg","assets/svg/king.svg","assets/svg/bishop.svg","assets/svg/pawn.svg","assets/svg/queen.svg","helpers/chessIcons.js","assets/svg/tower.svg","components/FigureBlock/FigureBlock.js","components/AppWrapper/AppWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["ChessBoard","boardSize","matrix","selectedFigure","filled","className","map","row","rowIndex","col","colIndex","disabled","cellNumber","s","figure","src","link","alt","name","ButtonsWrapper","setBoardSize","onClick","figures","pawn","knight","bishop","king","queen","FigureBlock","setSelectedFigure","item","AppWrapper","useState","setMatrix","setFilled","useEffect","isNumber","doubleNumber","chunk","Array","fill","index","cellFree","cellLocked","newMatrix","maxNumber","pawnColumn","pawnRow","kingColumn","kingRow","console","log","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAGaA,EAAa,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC9D,OACE,qBAAKC,UAAU,gBAAf,SACGH,EAAOI,KAAI,SAACC,EAAKC,GAAN,OACV,8BACGD,EAAID,KAAI,SAACG,EAAKC,GAAN,OACP,qBACEC,UAAWP,EAEXC,UAAS,iBACPJ,EAAY,EACRQ,EAAIG,WAAa,EACf,QACA,QACFJ,EAAW,EACXC,EAAIG,WAAa,EACf,QACA,QACFH,EAAIG,WAAa,EACjB,QACA,SACHC,GAAC,EAfN,SAiBkB,OAAfJ,EAAIK,OACH,qBACET,UAAU,cACVU,IAAKZ,EAAea,KACpBC,IAAKd,EAAee,OAGtBR,GAtBGA,OAJDF,SCJLW,G,MAAiB,SAAC,GAAyC,IAAvClB,EAAsC,EAAtCA,UAAWmB,EAA2B,EAA3BA,aAAchB,EAAa,EAAbA,OAOxD,OACE,sBAAKC,UAAU,kBAAf,UACE,wBAAQM,SAAUP,EAAQiB,QALV,kBAAMpB,EAHH,GAG+BmB,EAAcnB,GAAa,IAK7E,iBACA,wBAAQU,SAAUP,EAAQiB,QALX,kBAAMpB,EAHF,IAG8BmB,EAAcnB,GAAa,IAK5E,sBCbS,G,MAAA,IAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kCCO5BqB,EAAU,CACrB,CAAEN,KAAMO,EAAML,KAAM,QACpB,CAAEF,KCTW,IAA0B,kCDSxBE,KAAM,SACrB,CAAEF,KAAMQ,EAAQN,KAAM,UACtB,CAAEF,KAAMS,EAAQP,KAAM,UACtB,CAAEF,KAAMU,EAAMR,KAAM,QACpB,CAAEF,KAAMW,EAAOT,KAAM,UETVU,EAAc,SAAC,GAAmD,IAAjDzB,EAAgD,EAAhDA,eAAgB0B,EAAgC,EAAhCA,kBAAmBzB,EAAa,EAAbA,OAC/D,OACE,qBAAKC,UAAU,gBAAf,SACGiB,EAAQhB,KAAI,SAACwB,GAAD,OACX,qBAEEnB,SAAUP,EACVC,UAAS,iBAAYyB,IAAS3B,GAAkB,mBAChDkB,QAAS,kBAAMQ,EAAkBC,IAJnC,SAME,qBAAKzB,UAAU,eAAeU,IAAKe,EAAKd,KAAMC,IAAKa,EAAKZ,QALnDY,EAAKZ,Y,OCFPa,G,MAAa,WACxB,MAAkCC,mBAAS,GAA3C,mBAAO/B,EAAP,KAAkBmB,EAAlB,KACA,EAA4CY,mBAAS,MAArD,mBAAO7B,EAAP,KAAuB0B,EAAvB,KACA,EAA4BG,mBAAS,IAArC,mBAAO9B,EAAP,KAAe+B,EAAf,KACA,EAA4BD,oBAAS,GAArC,mBAAO5B,EAAP,KAAe8B,EAAf,KAEAC,qBAAU,WACR,GAAIC,mBAASnC,GAAY,CACvB,IAAIoC,EAAY,SAAGpC,EAAa,GAC1BC,EAASoC,gBAAM,YAEdC,MAAMF,GACNG,OACAlC,KAAI,SAACwB,EAAMW,GAAP,MAAkB,CACrBC,UAAU,EACV9B,WAAY6B,EACZE,YAAY,EACZ7B,OAAQ,UAGdb,GAEFgC,EAAU/B,MAEX,CAACD,IAqEJ,OACE,sBAAKI,UAAU,UAAf,UACE,cAAC,EAAD,CACEJ,UAAWA,EACXC,OAAQA,EACRC,eAAgBA,EAChBC,OAAQA,IAEV,sBAAKC,UAAU,eAAf,UACE,8BACE,oBAAGA,UAAU,QAAb,yBACeJ,EADf,MAC6BA,OAG/B,cAAC,EAAD,CACEA,UAAWA,EACXmB,aAAcA,EACdhB,OAAQA,IAEV,cAAC,EAAD,CACED,eAAgBA,EAChB0B,kBAAmBA,EACnBzB,OAAQA,IAEV,wBAAQO,UAAWR,GAAkBC,EAAQiB,QA3FhC,WACjB,IAAMuB,EAAS,YAAO1C,GAChB2C,EAAY5C,EAAY,EAC9B,OAAQE,EAAee,MACrB,IAAK,OAEH,IAAiC,IAA7B0B,EAAU,GAAG,GAAGF,SAClB,IACE,IAAII,EAAa,EACjBA,GAAcD,EACdC,GALoB,EAOpB,IAAK,IAAIC,EAAU,EAAGA,GAAWF,EAAWE,IAC1CH,EAAUG,GAASD,GAAYhC,OAASX,EACxCyC,EAAUG,GAASD,GAAYJ,UAAW,EAIhD,MACF,IAAK,OAEH,IAAiC,IAA7BE,EAAU,GAAG,GAAGF,SAClB,IACE,IAAIM,EAAa,EACjBA,GAAcH,EACdG,GALoB,EAOpB,IACE,IAAIC,EAAU,EACdA,GAAWJ,EACXI,GAVkB,EAYlBL,EAAUK,GAASD,GAAYlC,OAASX,EAAea,KACvD4B,EAAUK,GAASD,GAAYN,UAAW,EAIhD,MACF,QACEQ,QAAQC,IAAI,iBAEhBlB,EAAUW,GACVV,GAAU,IAiDN,kBAGA,wBAAQb,QAjDM,WAClB,GAAIe,mBAASnC,GAAY,CACvB,IAAIoC,EAAY,SAAGpC,EAAa,GAC1BC,EAASoC,gBAAM,YAEdC,MAAMF,GACNG,OACAlC,KAAI,SAACwB,EAAMW,GAAP,MAAkB,CACrBC,UAAU,EACV9B,WAAY6B,EACZE,YAAY,EACZ7B,OAAQ,UAGdb,GAEFgC,EAAU/B,GAEZ2B,EAAkB,MAClBK,GAAU,IA8BN,2BCpHOkB,MARf,WACE,OACE,qBAAKC,GAAG,MAAR,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5c160a9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ChessBoard.css\";\n\nexport const ChessBoard = ({ boardSize, matrix, selectedFigure, filled }) => {\n  return (\n    <div className=\"chess-wrapper\">\n      {matrix.map((row, rowIndex) => (\n        <div key={rowIndex}>\n          {row.map((col, colIndex) => (\n            <div\n              disabled={!filled}\n              key={colIndex}\n              className={`square ${\n                boardSize % 2\n                  ? col.cellNumber % 2\n                    ? \"black\"\n                    : \"white\"\n                  : rowIndex % 2\n                  ? col.cellNumber % 2\n                    ? \"white\"\n                    : \"black\"\n                  : col.cellNumber % 2\n                  ? \"black\"\n                  : \"white\"\n              }`}s\n            >\n              {col.figure !== null ? (\n                <img\n                  className=\"chess-image\"\n                  src={selectedFigure.link}\n                  alt={selectedFigure.name}\n                />\n              ) : (\n                colIndex\n              )}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./ButtonsWrapper.css\";\n\nexport const ButtonsWrapper = ({ boardSize, setBoardSize, filled }) => {\n    const minBoardSize = 1;\n    const maxBoardSize = 20;\n\n  const handleMinus = () => boardSize > minBoardSize && setBoardSize((boardSize -= 1));\n  const handlePlus = () => boardSize < maxBoardSize && setBoardSize((boardSize += 1));\n\n  return (\n    <div className=\"buttons-wrapper\">\n      <button disabled={filled} onClick={handleMinus}>- 1</button>\n      <button disabled={filled} onClick={handlePlus}>+ 1</button>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/knight.d342bbd5.svg\";","export default __webpack_public_path__ + \"static/media/king.ae55d691.svg\";","export default __webpack_public_path__ + \"static/media/bishop.6cf8aa38.svg\";","export default __webpack_public_path__ + \"static/media/pawn.d97f8737.svg\";","export default __webpack_public_path__ + \"static/media/queen.22f97c7f.svg\";","import knight from \"../assets/svg/knight.svg\";\nimport king from \"../assets/svg/king.svg\";\nimport bishop from \"../assets/svg/bishop.svg\";\nimport pawn from \"../assets/svg/pawn.svg\";\nimport queen from \"../assets/svg/queen.svg\";\nimport tower from \"../assets/svg/tower.svg\";\n\nexport const figures = [\n  { link: pawn, name: \"pawn\" },\n  { link: tower, name: \"tower\" },\n  { link: knight, name: \"knight\" },\n  { link: bishop, name: \"bishop\" },\n  { link: king, name: \"king\" },\n  { link: queen, name: \"queen\" },\n];\n","export default __webpack_public_path__ + \"static/media/tower.d209fed1.svg\";","import React from \"react\";\nimport \"./FigureBlock.css\";\nimport { figures } from \"../../helpers/chessIcons\";\n\nexport const FigureBlock = ({ selectedFigure, setSelectedFigure, filled }) => {\n  return (\n    <div className=\"icons-wrapper\">\n      {figures.map((item) => (\n        <div\n          key={item.name}\n          disabled={filled}\n          className={`figure ${item === selectedFigure && \"selected-figure\"}`}\n          onClick={() => setSelectedFigure(item)}\n        >\n          <img className=\"figure-image\" src={item.link} alt={item.name} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ChessBoard } from \"../ChessBoard/ChessBoard\";\nimport { ButtonsWrapper } from \"../ButtonsWrapper/ButtonsWrapper\";\nimport { FigureBlock } from \"../FigureBlock/FigureBlock\";\nimport { isNumber, chunk } from \"lodash\";\nimport \"./AppWrapper.css\";\n\nexport const AppWrapper = () => {\n  const [boardSize, setBoardSize] = useState(5);\n  const [selectedFigure, setSelectedFigure] = useState(null);\n  const [matrix, setMatrix] = useState([]);\n  const [filled, setFilled] = useState(false);\n\n  useEffect(() => {\n    if (isNumber(boardSize)) {\n      let doubleNumber = boardSize ** 2;\n      const matrix = chunk(\n        [\n          ...Array(doubleNumber)\n            .fill()\n            .map((item, index) => ({\n              cellFree: true,\n              cellNumber: index,\n              cellLocked: false,\n              figure: null,\n            })),\n        ],\n        boardSize\n      );\n      setMatrix(matrix);\n    }\n  }, [boardSize]);\n\n  const handleFill = () => {\n    const newMatrix = [...matrix];\n    const maxNumber = boardSize - 1;\n    switch (selectedFigure.name) {\n      case \"pawn\":\n        const movePawnForward = 3;\n        if (newMatrix[0][0].cellFree === true) {\n          for (\n            var pawnColumn = 0;\n            pawnColumn <= maxNumber;\n            pawnColumn += movePawnForward\n          ) {\n            for (var pawnRow = 0; pawnRow <= maxNumber; pawnRow++) {\n              newMatrix[pawnRow][pawnColumn].figure = selectedFigure;\n              newMatrix[pawnRow][pawnColumn].cellFree = false;\n            }\n          }\n        }\n        break;\n      case \"king\":\n        const moveKingForward = 2;\n        if (newMatrix[0][0].cellFree === true) {\n          for (\n            var kingColumn = 0;\n            kingColumn <= maxNumber;\n            kingColumn += moveKingForward\n          ) {\n            for (\n              var kingRow = 0;\n              kingRow <= maxNumber;\n              kingRow += moveKingForward\n            ) {\n              newMatrix[kingRow][kingColumn].figure = selectedFigure.link;\n              newMatrix[kingRow][kingColumn].cellFree = false;\n            }\n          }\n        }\n        break;\n      default:\n        console.log(\"DEFAULT VALUE\");\n    }\n    setMatrix(newMatrix);\n    setFilled(true);\n  };\n\n  const handleReset = () => {\n    if (isNumber(boardSize)) {\n      let doubleNumber = boardSize ** 2;\n      const matrix = chunk(\n        [\n          ...Array(doubleNumber)\n            .fill()\n            .map((item, index) => ({\n              cellFree: true,\n              cellNumber: index,\n              cellLocked: false,\n              figure: null,\n            })),\n        ],\n        boardSize\n      );\n      setMatrix(matrix);\n    }\n    setSelectedFigure(null);\n    setFilled(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <ChessBoard\n        boardSize={boardSize}\n        matrix={matrix}\n        selectedFigure={selectedFigure}\n        filled={filled}\n      />\n      <div className=\"right-column\">\n        <div>\n          <p className=\"title\">\n            Border size {boardSize} x {boardSize}\n          </p>\n        </div>\n        <ButtonsWrapper\n          boardSize={boardSize}\n          setBoardSize={setBoardSize}\n          filled={filled}\n        />\n        <FigureBlock\n          selectedFigure={selectedFigure}\n          setSelectedFigure={setSelectedFigure}\n          filled={filled}\n        />\n        <button disabled={!selectedFigure || filled} onClick={handleFill}>\n          Fill\n        </button>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { AppWrapper } from \"./components/AppWrapper/AppWrapper\";\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <AppWrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}